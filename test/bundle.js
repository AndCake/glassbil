"use strict";var scope="undefined"!=typeof global?global:"undefined"!=typeof window?window:{},eventRegistry=scope.__eventRegistry=scope.__eventRegistry||{};function trigger(e){var t=arguments;if(eventRegistry[e])for(var o,n=0,r=eventRegistry[e].length;o=eventRegistry[e][n],n<r;n+=1){if(!1===o.apply(this,Array.prototype.slice.call(t,1)))break}}function on(e,t){eventRegistry[e]||(eventRegistry[e]=[]),eventRegistry[e].push(t)}function off(e,t){if(eventRegistry[e])if("function"==typeof t){var o=eventRegistry[e].indexOf(t);o>=0&&eventRegistry[e].splice(o,1)}else eventRegistry[e]=[]}function one(e,t){var o=this,n=function(){off(e,n),t.apply(o,Array.prototype.slice.call(arguments))};on(e,n)}var events=Object.freeze({trigger:trigger,on:on,off:off,one:one});function enrichCurrentState(e){var t=e;return"object"==typeof e&&!Array.isArray(e)&&"number"==typeof e.length&&(e.length>0&&void 0!==e[0]||0===e.length)&&(t=Array.prototype.slice.call(e,0)),t.toJS=function(){return t},t}var WorkerStub=function(e){if(!window.Worker)throw new Error("Your browser does not support web workers.");var t=this;t.worker=new Worker(e),t.messageQueue=[],t.actionDefinitions=[],t.currentState=[],Object.keys(events).forEach(function(o){t[o]=function(t){return events[o].apply(events,[e+":"+t].concat(Array.prototype.slice.call(arguments,1)))}}),t.worker.addEventListener("message",function(e){var o=e.data,n=o.type,r=o.actionName,s=o.payload;"@@STATE"===n?(t.currentState=s,t.trigger("changed",enrichCurrentState(t.currentState),r)):"@@ACTIONS"===n&&s.forEach(function(e){t.actionDefinitions.push(e),t[e]=function(o){t.messageQueue.push({actionName:e,data:o}),setTimeout(function(){t.worker.postMessage({type:"@@ACTION",messages:t.messageQueue}),t.messageQueue=[]})}})}),t.worker.postMessage({type:"@@ACTIONS"})},prototypeAccessors={data:{configurable:!0}};function glassbilDevTools(e){var t=window.devToolsExtension||window.top.devToolsExtension,o=!1;return t?e.devtools?e:(e.devtools=t.connect(),e.devtools.subscribe(function(t){if("DISPATCH"===t.type&&t.state){if("TOGGLE_ACTION"===t.payload.type)return void console.warn("Skipping not implemented yet.");o="JUMP_TO_ACTION"===t.payload.type||"JUMP_TO_STATE"===t.payload.type,'{"length":0}'===t.state&&(t.state="[]"),e.setState(JSON.parse(t.state))}}),e.devtools.init(e.data),e.on("changed",function(t,n){n=n||"setState",o?o=!1:e.devtools.send(n,t.toJS())}),e):(console.warn("Please install/enable the Redux devtools extension."),e.devtools=null,e)}prototypeAccessors.data.get=function(){return enrichCurrentState(this.currentState)},WorkerStub.prototype.actions=function(){if(0===arguments.length)return this.actionDefinitions;throw new Error("Dynamic change/addition of actions not allowed on Web Worker stub.")},WorkerStub.prototype.setState=function(e,t){var o=this;void 0===t&&(t="setState"),this.messageQueue.push({actionName:t,data:e}),setTimeout(function(){o.worker.postMessage({type:"@@ACTION",messages:o.messageQueue}),o.messageQueue=[]})},Object.defineProperties(WorkerStub.prototype,prototypeAccessors);var store=glassbilDevTools(new WorkerStub("./worker-bundle.js"));store.on("changed",function(e){document.querySelector("ul").innerHTML=e.map(function(e){return'\n\t\t<li data-id="'+e.id+'">\n\t\t\t'+e.value+"\n\t\t</li>\n\t"}).join("")}),document.querySelector("input").addEventListener("change",function(){store.added({id:(store.data.length&&store.data[store.data.length-1].id||0)+1,value:this.value}),this.value="",this.focus()}),document.querySelector("ul").addEventListener("click",function(e){e.target.matches("li")&&store.removed(~~e.target.dataset.id)});
